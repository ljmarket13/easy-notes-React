{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.js","index.js"],"names":["Header","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","id","CreateArea","useState","isExpanded","setExpanded","takeNote","inputText","setInputText","handleChange","event","target","name","value","prevValue","onChange","placeholder","rows","Zoom","in","Fab","onAdd","preventDefault","App","items","setItems","deleteNote","prevItems","filter","newNotes","index","newNote","map","key","ReactDOM","render","document","getElementById"],"mappings":"+PAWeA,EARA,WACX,OACI,gCACI,4BAAI,kBAAC,IAAD,MAAJ,gBCKGC,EATA,WACX,IAAMC,GAAO,IAAIC,MAAOC,cACxB,OACI,gCACI,0CAAgBF,K,iBCYbG,EAfF,SAACC,GAMV,OACI,yBAAKC,UAAU,QACX,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BAAQC,QARhB,WACIJ,EAAMK,SAASL,EAAMM,MAOa,kBAAC,IAAD,S,gDCqC3BC,MA7Cf,SAAoBP,GAEhB,MAAkCQ,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAAS,CACvCN,MAAO,GACPS,SAAU,KAFd,mBAAOC,EAAP,KAAkBC,EAAlB,KAKA,SAASC,EAAaC,GAClB,MAAsBA,EAAMC,OAArBC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MACbL,GAAa,SAACM,GACV,OAAO,2BACAA,GADP,kBAEKF,EAAOC,OAmBpB,OACI,6BACA,0BAAMjB,UAAU,eACXQ,GAAe,2BAAOW,SAAUN,EAAcG,KAAK,QAAQI,YAAY,QAAQH,MAAON,EAAUV,QACjG,8BAAUkB,SAAUN,EAAcV,QAR1C,WACIM,GAAY,IAO2CO,KAAK,WAAWI,YAAY,iBAAiBC,KAAMb,EAAa,EAAI,EAAGS,MAAON,EAAUD,WAC/I,kBAACY,EAAA,EAAD,CAAMC,GAAIf,GACN,kBAACgB,EAAA,EAAD,CAAKrB,QAnBb,SAAiBW,GACbf,EAAM0B,MAAMd,GACZC,EAAa,CACTX,MAAO,GACPS,SAAU,KAEdI,EAAMY,mBAaqB,kBAAC,IAAD,WCDpBC,EApCH,WAER,MAA0BpB,mBAAS,IAAnC,mBAAOqB,EAAP,KAAcC,EAAd,KAQA,SAASC,EAAWzB,GAChBwB,GAAS,SAAAE,GACL,OAAOA,EAAUC,QAAO,SAACC,EAAUC,GAC/B,OAAOA,IAAU7B,QAK7B,OACI,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYoB,MAjBhB,SAAiBU,GACbN,GAAS,SAACE,GACN,MAAM,GAAN,mBAAWA,GAAX,CAAsBI,UAgBzBP,EAAMQ,KAAI,SAACH,EAAUC,GACd,OAAQ,kBAAC,EAAD,CAAMG,IAAOH,EACjB7B,GAAM6B,EACNjC,MAASgC,EAAShC,MAClBC,QAAW+B,EAASvB,SACpBN,SAAY0B,OAIxB,kBAAC,EAAD,QCjCRQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4f28546e.chunk.js","sourcesContent":["import React from 'react';\r\nimport HighlightIcon from '@material-ui/icons/Highlight';\r\n\r\nconst Header = () => { \r\n    return (\r\n        <header>\r\n            <h1><HighlightIcon />Easy Notes</h1>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    const year = new Date().getFullYear();\r\n    return (\r\n        <footer>\r\n            <p>Copyright @ {year}</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst Note = (props) => {\r\n\r\n    function handleClick() {\r\n        props.onDelete(props.id)\r\n    }\r\n\r\n    return (\r\n        <div className='note'>\r\n            <h1>{props.title}</h1>\r\n            <p>{props.content}</p>\r\n            <button onClick={handleClick}><DeleteIcon /></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note;","import React, {useState} from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nfunction CreateArea(props) {\r\n\r\n    const [isExpanded, setExpanded] = useState(false);\r\n    const [inputText, setInputText] = useState({\r\n        title: \"\",\r\n        takeNote: \"\"\r\n    });\r\n\r\n    function handleChange(event) {\r\n        const {name, value} = event.target;\r\n        setInputText((prevValue) => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: value\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    function addNote(event) {\r\n        props.onAdd(inputText);\r\n        setInputText({\r\n            title: '',\r\n            takeNote: ''\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    function expand() {\r\n        setExpanded(true);\r\n    }\r\n \r\n    return (\r\n        <div>\r\n        <form className=\"create-note\">\r\n            {isExpanded && (<input onChange={handleChange} name=\"title\" placeholder=\"Title\" value={inputText.title} /> )}\r\n            <textarea onChange={handleChange} onClick={expand} name=\"takeNote\" placeholder=\"Take a note...\" rows={isExpanded ? 3 : 1} value={inputText.takeNote} />\r\n        <Zoom in={isExpanded}>\r\n            <Fab onClick={addNote}><AddIcon /></Fab>\r\n        </Zoom>\r\n        </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateArea;\r\n","import React, {useState} from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Note from './Note';\r\nimport CreateArea from './CreateArea'\r\n\r\nconst App = () => {\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    function addItem(newNote) {\r\n        setItems((prevItems) => {\r\n            return [...prevItems, newNote];\r\n        })\r\n    }\r\n\r\n    function deleteNote(id) {\r\n        setItems(prevItems => {\r\n            return prevItems.filter((newNotes, index) => {\r\n                return index !== id;\r\n            });\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <Header / >\r\n        <CreateArea onAdd = {addItem}/> \r\n        {items.map((newNotes, index) => {\r\n                return (<Note key = {index}\r\n                    id = {index}\r\n                    title = {newNotes.title}\r\n                    content = {newNotes.takeNote}\r\n                    onDelete = {deleteNote} />\r\n                )\r\n            })\r\n        }\r\n        <Footer / >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}